services:
  # API Service
  api:
    build:
      context: .
      dockerfile: GrandeTech.QueueHub.API/Dockerfile
    ports:
      - "7126:80"
      - "7127:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - Database__UseSqlDatabase=true
      - Database__UseInMemoryDatabase=false
      - Database__AutoMigrate=true
      - Database__SeedData=true
      - ConnectionStrings__MySqlConnection=Server=mysql;Database=QueueHubDb;User=root;Password=DevPassword123!;Port=3306;CharSet=utf8mb4;SslMode=None;
      - RateLimiting__MaxRequestsPerWindow=20
      - RateLimiting__WindowMinutes=1
      - DataAnonymization__DataRetentionDays=90
      - DataAnonymization__InactiveDataRetentionDays=30
      - SecurityAudit__EnableAuditing=true
      - SecurityAudit__LogSuccessfulOperations=true
      - SecurityAudit__LogFailedOperations=true
      - PerformanceMonitoring__MaxHistoryPoints=1000
      - PerformanceMonitoring__CleanupIntervalMinutes=15
      - PerformanceMonitoring__MetricRetentionHours=24
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - queuehub-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=DevPassword123!
      - MYSQL_DATABASE=QueueHubDb
      - MYSQL_USER=queuehub
      - MYSQL_PASSWORD=DevPassword123!
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./scripts/migrate-json-data.sql:/docker-entrypoint-initdb.d/02-json-migration.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pDevPassword123!"]
      timeout: 20s
      retries: 10
    networks:
      - queuehub-network

  # Redis Cache (for future use)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - queuehub-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Application Insights Emulator (for local development)
  appinsights:
    image: mcr.microsoft.com/applicationinsights/applicationinsights:latest
    ports:
      - "8080:80"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__MySqlConnection=Server=mysql;Database=QueueHubDb;User=root;Password=DevPassword123!;Port=3306;CharSet=utf8mb4;SslMode=None;
    depends_on:
      - api
    networks:
      - queuehub-network
    command: >
      sh -c "
        echo 'Waiting for API to be ready...'
        while ! curl -f http://api/health/ready; do
          sleep 5
        done
        echo 'API is ready!'
        while true; do
          curl -s http://api/health > /dev/null
          curl -s http://api/performance/summary > /dev/null
          sleep 30
        done
      "

volumes:
  mysql_data:
  redis_data:

networks:
  queuehub-network:
    driver: bridge 